# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2001-02-09 01:25+0100\n"
"PO-Revision-Date: 2001-07-10 21:25GMT+0200\n"
"Last-Translator: Salvador Gimeno Zanón <salgiza@jazzfree.com>\n"
"Language-Team: Spanish <kde-es@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 0.8\n"

#: index.docbook:7
msgid "Porting Applications to &arts;"
msgstr "Portando aplicaciones a &aRts;"

#: index.docbook:10
msgid "Using &artsdsp;"
msgstr "Utilizando &artsdsp;"

#: index.docbook:12
msgid ""
"The &artsdsp; utility, <link linkend=\"artsdsp\">described "
"previously</link>, allows most legacy sound applications that talk to the "
"audio devices directly, to work properly under &arts;. Applications written "
"to use the Enlightenment Sound Daemon (<application>esd</application>) will "
"also work in most cases by running <application>esd</application> under "
"&artsdsp;."
msgstr ""
"La utilidad &artsdsp;, <link linkend=\"artsdsp\">descrita con "
"anterioridad</link>, permite que la mayoría de aplicaciones antiguas que "
"trabajan directamente sobre los dispositivos de audio, funcionen "
"correctamente con &aRts;. Las aplicaciones escritas para utilizar el "
"Enlightenment Sound Daemon (<application>esd</application>) también "
"funcionarán en la mayoría de casos ejecutando "
"<application>esd</application> sobre &artsdsp;."

#: index.docbook:21
msgid ""
"This makes a good short term solution to porting existing applications to "
"&kde;. However, it does not allow the application to directly take advantage "
"of all of the power of &arts;, such as using modules and multimedia streams "
"other than digital audio. If the application ges beyond simple playing of "
"sound files, it usually makes sense to add native support for &arts; to the "
"application."
msgstr ""
"Esto ofrece una buena solución a corto plazo para portar aplicaciones "
"existentes a &KDE;. Sin embargo, no permite que la aplicación utilice todas "
"las posibilidades de &aRts;, tales como el uso de módulos y flujos "
"multimedia que no sean de audio digital. Si la aplicación va más allá de "
"ejecutar archivos de audio, es lógico añadir soporte nativo para &aRts; a "
"la aplicación."

#: index.docbook:30
msgid ""
"Using &arts; also means that application does not have to do as much work -- "
"it can leverage the functions in &arts; to handle issues like codecs for "
"different media formats and control of the sound hardware."
msgstr ""

#: index.docbook:39
msgid "Adding Native &arts; support"
msgstr "Añadiendo soporte nativo para &aRts;"

#: index.docbook:41
msgid ""
"When using &arts;, you have a number of different <link "
"linkend=\"arts-apis\"><acronym>API</acronym>s</link> to choose from. The "
"decision of which to use depends on a number of factors, including what type "
"of streaming media is used (sound, &MIDI;, &CD; audio, &etc;), the "
"<acronym>API</acronym> features required, and whether it is written in C++. "
"In most cases the choice should be relatively obvious based on the required "
"features."
msgstr ""

#: index.docbook:51
msgid ""
"For cross-platform portability, applications that need to run on "
"environments other than &kde; cannot rely on &arts; being present. Using the "
"plug-ins paradigm is a good way to support different multimedia "
"environments. Making the plug-in <acronym>API</acronym> open and documented "
"(especially for closed source applications) also has the advantage of "
"allowing someone other than the application developer to implement an &arts; "
"plug-in."
msgstr ""
