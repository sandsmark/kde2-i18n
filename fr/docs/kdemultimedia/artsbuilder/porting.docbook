<!-- <?xml version="1.0" ?>
<!DOCTYPE chapter PUBLIC "-//KDE//DTD DocBook XML V4.1-Based Variant V1.0//EN" "dtd/kdex.dtd">
To validate or process this file as a standalone document, uncomment
this prolog. Be sure to comment it out again when you are done -->

<chapter id="porting">
<title
>Portage d'applications vers &arts;</title>

<sect1 id="using-artsdsp">
<title
>Utilisation de &artsdsp;</title>

<para
> L'utilitaire &artsdsp; <link linkend="artsdsp"
>décrit précédemment</link
> permet à la plupart des applications sonores héritées qui communiquent directement aux périphériques audio de travailler proprement avec &arts;. Les applications écrites pour utiliser l'Enlightenment Sound Daemon (<application
>esd</application
>) fonctionneront aussi dans la plupart des cas en exécutant  <application
>esd</application
> avec &artsdsp;. </para>

<para
> Ceci constitue une bonne solution à court terme pour porter les applications &kde; existantes. Cependant, elle ne permet pas à l'application de tirer avantage directement de toute la puissance de &arts;, comme utiliser des modules et des flux multimédia autre que des données audio numériques. Si l'application va au-delà d'une simple lecture d'un fichier son, il est plus logique d'ajouter le support natif de &arts; à cette application. </para>

<para
> Utiliser &arts; signifie aussi que l'application n'a pas tant de travail à faire -- elle peut tirer parti des fonctions de &arts; pour par exemple gérer le codecs pour des formats multimédia différents et le contrôle des périphériques sonores. </para>

</sect1>

<sect1 id="adding-native-arts-support">
<title
>Ajout du support natif de &arts;</title>

<para
> Lorsque vous utilisez &arts;, vous pouvez choisir parmi un grand nombre d'<link linkend="arts-apis"
><acronym
>API</acronym
></link
> Laquelle utiliser dépend de plusieurs facteurs,incluant le type de flux audio utilisé (son, &MIDI;, &CD; audio, &etc;., les caractéristiques de l'API requises, et si c'est écrit en C++. La plupart des cas, le choix est évidemment basé sur les caractéristiques requises. </para>

<para
> Pour la portabilité entre plate-formes, les applications qui doivent être exécutées dans d'autres environnements que &kde; ne peuvent pas reposer sur la présence de &arts;. L'utilisation de modules externes (plug-ins) est un bon moyen de gérer différents environnements multimédia. L'ouverture et la documentation des <acronym
>API</acronym
> des modules externes a l'avantage de permettre à des personnes autres que le développeur de l'application d'implanter un module externe de aRts. </para>

</sect1>

</chapter>


