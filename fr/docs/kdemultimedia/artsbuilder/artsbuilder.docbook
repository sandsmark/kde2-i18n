<!-- <?xml version="1.0" ?>
<!DOCTYPE chapter PUBLIC "-//KDE//DTD DocBook XML V4.1-Based Variant V1.0//EN" "dtd/kdex.dtd">
To validate or process this file as a standalone document, uncomment
this prolog. Be sure to comment it out again when you are done -->
<chapter id="artsbuilder">
<title
>&artsbuilder;</title>

<sect1 id="overview">
<title
>Aperçu</title>

<para
> Tout d'abord, avant de lancer &artsbuilder;, vous devez aussi lancer le serveur de son (&artsd;). Habituellement, lorsque vous utilisez &kde; 2.1, &artsd; devrait déjà être en fonctionnement. Si ce n'est pas le cas, vous pouvez configurer le lancement automatique du serveur de son dans le &kcontrol;, rubrique <menuchoice
><guilabel
>Son</guilabel
><guilabel
>Serveur de son</guilabel
> </menuchoice
>. </para>

<para
> Lorsque vous exécutez &arts;, il lance toujours de petits modules. &artsbuilder; est un outil pour créer de nouvelles structures composées de petits modules interconnectés. Vous placez simplement sur les modules dans la grille. Pour ce faire, choisissez-les dans le menu <guimenu
>Modules</guimenu
>, et cliquez quelque part dans la zone gris-vert. </para>

<para
> Les modules ont généralement des ports (dans lesquels les flux audio transitent). Pour connecter deux ports, cliquez sur le premier, ce qui le rend orange, puis cliquez sur le second. Vous ne pouvez que connecter un port d'entrée (en haut du module) avec un port de sortie (en bas du module). Si vous voulez assigner une valeur constante à un port (ou le déconnecter), double-cliquez sur le port. </para>

</sect1>

<sect1 id="artsbuilder-tutorial">
<title
>Tutoriel</title>

<sect2 id="step-1">
<title
>Étape 1</title>

<para
> Démarrez &artsbuilder;. </para>

<para
> Vous avez besoin d'un module Synth&lowbar;AMAN&lowbar;PLAY pour entendre ce que vous créez . Créez alors un module Synth&lowbar;AMAN&lowbar;PLAY en sélectionnant <menuchoice
> <guimenu
>Modules</guimenu
> <guisubmenu
>Synthèse</guisubmenu
> <guisubmenu
>Entrée/Sortie son</guisubmenu
> <guisubmenu
>Synth&lowbar;AMAN&lowbar;PLAY</guisubmenu
> </menuchoice
> et cliquez sur l'espace libre réservé aux modules. Placez-le sous la cinquième ligne ou plus parce que nous ajouterons des choses au-dessus. </para>

<para
> Le module aura un paramètre <parameter
>title</parameter
> (le port le plus à gauche), et <parameter
>autoRestoreID</parameter
> (à côté du port le plus à gauche) afin de le trouver. Pour remplir ces sorties, double-cliquez sur ces ports, sélectionnez valeur constante et saisissez <userinput
>tutorial</userinput
> dans la boîte d'édition. Cliquez sur <guibutton
>OK</guibutton
> pour appliquer vos changements. </para>

<para
> Sélectionnez <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Exécuter la structure</guimenuitem
> </menuchoice
> Vous n'entendrez absolument rien. Le module de lecture a besoin de quelque chose en entrée... ;) Écoutez le silence pendant un moment, cliquez sur <guibutton
>OK</guibutton
> et passez à l'étape 2 </para>
</sect2>

<sect2 id="step-2">
<title
>Étape 2</title>

<para
>Créez un module Synth&lowbar;WAVE&lowbar;SIN (depuis <menuchoice
> <guimenu
>Modules</guimenu
> <guimenuitem
>Synthèse</guimenuitem
> <guimenuitem
>Formes d'ondes</guimenuitem
> </menuchoice
>). et placez-le au dessus du module Synth&lowbar;AMAN&lowbar;PLAY (laissez une ligne vide entre). </para>

<para
> Comme vous pouvez le voir, il produit quelque chose en sortie, mais nécessite un paramètre <guilabel
>pos</guilabel
> (position) en entrée. Tout d'abord, relions la sortie aux haut-parleurs. Cliquez sur le port <guilabel
>out</guilabel
> (sortie) du module Synth&lowbar;WAVE&lowbar;SIN et ensuite sur le port <guilabel
>left</guilabel
> (gauche) du module Synth&lowbar;AMAN&lowbar;PLAY. Voilà, vous avez connecté deux modules. </para>

<para
> Dans &arts;, les oscillateurs ne nécessitent pas une fréquence en entrée, mais une position dans l'échantillon. Cette position doit être comprise entre 0 et 1, ce qui correspond pour un objet Synth&lowbar;WAVE&lowbar;SIN standard à la plage 0..2*pi. Pour générer des valeurs d'oscillation à partir d'une fréquence, un module Synth&lowbar;FREQUENCY est utilisé. </para>

<para
> Créez un module Synth&lowbar;FREQUENCY (depuis <menuchoice
> <guimenu
>Modules</guimenu
> <guimenuitem
>Synthèse</guimenuitem
> <guimenuitem
>Oscillateurs et modulation</guimenuitem
> </menuchoice
>) et connectez sa sortie <quote
>pos</quote
> à l'entrée <quote
>pos</quote
> de votre module Synth&lowbar;WAVE&lowbar;SIN. Spécifiez une valeur constante de 440 au port fréquence du générateur FREQUENCY. </para>


<para
> Cliquez sur <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Exécuter la structure</guimenuitem
></menuchoice
>. Vous entendrez une onde sinusoïdale à 440 Hz sur l'un de vos haut-parleurs. Lorsque vous l'aurez écouté pendant un moment, cliquez sur <guibutton
>OK</guibutton
> et passez à l'étape 3. </para>

</sect2>

<sect2 id="step-3">
<title
>Étape 3</title>

<para
> OK, ce serait mieux si vous pouviez entendre une onde sinusoïdale sur les deux haut-parleurs. Connectez le port droit du module Synth&lowbar;PLAY au port "outvalue" (valeur de sortie) du module Synth&lowbar;WAVE&lowbar;SIN. </para>

<para
>Créez un objet Synth&lowbar;SEQUENCE (depuis <menuchoice
> <guimenu
>Modules</guimenu
> <guisubmenu
>Synthèse </guisubmenu
><guisubmenu
>Midi + séquenceur</guisubmenu
> </menuchoice
>) Il devrait se trouver en haut de l'écran. Si vous avez besoin de plus de place, vous pouvez déplacer les autres modules en les sélectionnant (pour en sélectionner plusieurs, appuyez sur MAJ) et déplacez-les. </para>

<para
> Maintenant, connectez la sortie "frequ" (fréquence) du module Synth&lowbar;SEQUENCE à l'entrée "frequ" du module Synth&lowbar;FREQUENCY. Spécifiez alors la valeur constante 0,13 pour la vitesse de la séquence (la vitesse est le port le plus à gauche). </para>

<para
> Puis allez au port le plus à droite (sequence) du Synth&lowbar;SEQUENCE et saisissez comme valeur constante <userinput
>A-3;C-4;E-4;C-4;</userinput
> ceci spécifie une séquence. Vous trouverez plus d'informations dans le manuel de référence des modules. </para>

<note
> <para
>Remarque&nbsp;: Synth&lowbar;SEQUENCE a <emphasis
>vraiment</emphasis
> besoin d'une séquence et une vitesse. Sans ces données, vous aurez certainement des fichiers core générés. </para
> </note>

<para
> Sélectionnez <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Exécuter la structure...</guimenuitem
></menuchoice
> Vous entendrez jouer une séquence sympathique. Si vous avez aimé, cliquez sur <guibutton
>OK</guibutton
> et passez à l'étape 4. </para>
</sect2>

<sect2 id="step-4">
<title
>Étape 4</title>

<para
>Créez un module Synth&lowbar;PSCALE (depuis <menuchoice
> <guimenu
>Modules</guimenu
> <guisubmenu
>Synthèse</guisubmenu
> <guisubmenu
>Enveloppes</guisubmenu
> </menuchoice
>). Déconnectez la sortie de l'onde sinusoïdale en double cliquant dessus et en choisissant <guilabel
>not connected</guilabel
> (non connecté). Connectez </para>

<orderedlist
><listitem
> <para
>La sortie du SIN à l'entrée de PSCALE</para
> </listitem
> <listitem
> <para
>La sortie de PSCALE au AMAN_PLAY gauche</para
> </listitem
> <listitem
> <para
>La sortie de PSCALE au AMAN_PLAY droit</para
> </listitem
> <listitem
> <para
>Le <quote
>pos</quote
> de SEQUENCE au <quote
>pos</quote
> de PSCALE</para
> </listitem
> </orderedlist>

<para
> Finalement, placez le port <quote
>top</quote
> de PSCALE à une certaine valeur, par exemple 0.1. </para>

<para
> Voyons maintenant comment cela fonctionne&nbsp;: le module Synth&lowbar;SEQUENCE donne une information supplémentaire sur la position de la note qu'il est en train de jouer, 0 signifie juste commencé et 1 signifie finie.Le module Synth&lowbar;PSCALE va modifier l'amplitude du flux audio qui le traverse d'un volume 0 (silence) à un volume 1 (volume d'origine) puis de nouveau 0 (silence), d'après la position. La position où le pic doit apparaître peut être donné sur le port "pos". 0,1 signifie que lorsque 10&percnt; de la note ont été joués, le volume a atteint son maximum, et diminue ensuite. </para>


<para
>Sélectionnez <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Exécuter la structure...</guimenuitem
></menuchoice
> Vous entendrez jouer une séquence sympathique. Si vous avez aimé, cliquez sur <guibutton
>OK</guibutton
> et passez à l'étape 5. </para>

</sect2>

<sect2 id="step-5-starting-to-beam-data-around">
<title
>Étape 5&nbsp;: début d'échange de données ;)</title>

<para
>Démarrez un autre &artsbuilder;.</para>

<para
> Placez un module Synth&lowbar;AMAN&lowbar;PLAY dedans, et donnez-lui un nom raisonnable. Insérez un module Synth&lowbar;BUS&lowbar;DOWNLINK et&nbsp;:</para>

<orderedlist
> <listitem
> <para
> placez l'entrée bus de ce module à audio (c'est juste un nom, appelez-le Fred si ça vous fait plaisir). </para
> </listitem
> <listitem
> <para
> connectez la sortie <quote
>left</quote
> du module Synth&lowbar;BUS&lowbar;DOWNLINK à l'entrée <quote
>left</quote
> du module Synth&lowbar;AMAN&lowbar;PLAY </para
> </listitem
> <listitem
> <para
> connectez la sortie <quote
>right</quote
> du module Synth&lowbar;BUS&lowbar;DOWNLINK à l'entrée <quote
>right</quote
> du module Synth&lowbar;AMAN&lowbar;PLAY </para
> </listitem
> </orderedlist>

<para
> Exécutez la structure. Comme on pouvait s'y attendre, on n'entend rien, ... pas encore. </para>

<para
> Revenez à la structure avec le module Synth&lowbar;WAVE&lowbar;SIN et remplacez le module Synth&lowbar;AMAN&lowbar;PLAY par un module Synth&lowbar;BUS&lowbar;UPLINK, et configurez le nom à <quote
>audio</quote
> (ou à Fred si vous voulez). Pour effacer les modules, sélectionnez-les et cliquez sur <menuchoice
><guimenu
>Édition</guimenu
> <guimenuitem
>Supprimer</guimenuitem
></menuchoice
> dans le menu (ou appuyez sur la touche <keycap
>Suppr</keycap
>) </para>

<para
> Cliquez sur <menuchoice
><guimenu
>File</guimenu
><guilabel
>Execute structure</guilabel
></menuchoice
>. Vous entendrez la séquence avec les notes dont le volume est modifié, transportées par le bus. </para>

<para
> Si vous voulez vous rendre compte de l'intérêt réel d'une telle chose, cliquez sur <guibutton
>OK</guibutton
> (dans le &artsbuilder; qui exécute le module Synth&lowbar;SEQUENCE, vous pouvez laisser tourner l'autre) et passez à l'étape 6. </para>
</sect2>

<sect2 id="step-6-beaming-for-advanced-users">
<title
>Étape 6: échange de données pour les utilisateurs avancés.</title>

<para
> Sélectionnez <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Renommer la structure</guimenuitem
></menuchoice
> dans le menu de artsbuilder qui contient le module Synth&lowbar;SEQUENCE, et appelez-le tutoriel. Cliquez sur <guibutton
>OK</guibutton
>. </para>

<para
> Choisissez <menuchoice
><guimenu
>Fichier</guimenu
> <guimenuitem
>Enregistrer...</guimenuitem
> </menuchoice
> </para>

<para
> Démarrez encore un autre &artsbuilder; et choisissez <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Ouvrir...</guimenuitem
> </menuchoice
>, et rechargez le tutoriel. </para>

<para
> Maintenant vous pouvez cliquer sur <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Exécuter la structure</guimenuitem
> </menuchoice
> dans les deux &artsbuilder; qui contiennent cette structure. Vous entendrez maintenant deux fois la même chose. Suivant l'instant auquel vous les avez démarrés, le son sera plus ou moins bon. </para>

<para
> Une autre chose sympathique à faire à ce point est de démarrer &noatun;, et lire un <literal role="extension"
>mp3</literal
>. Démarrez &artscontrol;. Allez dans <menuchoice
><guimenu
>Affichage</guimenu
><guimenuitem
>voir le Gestionnaire audio</guimenuitem
></menuchoice
>. Vous verrez alors &noatun; et votre structure <quote
>tutoriel</quote
> jouant quelque chose. Double-cliquez sur &noatun;. Vous aurez alors une liste de destinations. Vous pouvez dire à &noatun; d'envoyer sa sortie via le bus audio fourni par votre structure <quote
>tutoriel</quote
>. </para>
</sect2>

<sect2 id="step-7-midi-synthesis">
<title
>Étape 7: Synthèse contrôlée par midi</title>

<para
> Enfin, vous êtes maintenant en mesure de transformer votre onde sinusoïdale en instrument proprement dit. Ceci ne prend son sens que si vous avez quelque chose de bricolé qui puisse envoyer des événements &MIDI; vers &arts;. Je vais décrire maintenant comment vous pouvez utiliser des claviers externes, mais un séquenceur compatible avec les bus midi comme &brahms; fonctionnera aussi. </para>

<para
> Tout d'abord, nettoyez votre bureau pour n'obtenir qu'un &artsbuilder; contenant une structure d'onde sinusoïdale (pas en cours d'exécution). Ensuite, allez trois fois dans <menuchoice
><guimenu
>Ports</guimenu
><guisubmenu
>Créer un signal d'entrée audio (IN)</guisubmenu
></menuchoice
> et trois fois dans <menuchoice
><guimenu
>Ports</guimenu
><guisubmenu
>Créer un signal de sortie audio (OUT)</guisubmenu
></menuchoice
>. Placez les ports quelque part. </para>

<para
> Finalement, allez dans <menuchoice
><guimenu
>Ports</guimenu
> <guilabel
>modifier les positions/noms</guilabel
></menuchoice
> et nommez les ports frequency (fréquence), velocity (vélocité ou force de frappe), pressed (enfoncé), left (gauche), right (droite), et done (terminé). </para>

<para
> Enfin, vous pouvez supprimer le module Synth&lowbar;SEQUENCE, et connecter plutôt le port d'entrée frequency au port frequency du module Synth&lowbar;FREQUENCY. Hmm, et que faire de pos&nbsp;?</para
> <para
>Nous n'en avons pas car il n'existe aucun algorithme au monde capable de prédire quand l'utilisateur va relâcher la note qu'il vient juste d'enfoncer sur le clavier midi. Donc à la place, il y a un paramètre <quote
>pressed</quote
> (pressé) qui indique juste si l'utilisateur maintient la touche enfoncée (pressed = 1 : touche maintenue enfoncée, pressed = 0 : touche relâchée). </para>

<para
> Ceci signifie que l'objet Synth&lowbar;PSCALE doit être remplacé maintenant. Connectez un module Synth&lowbar;ENVELOPE&lowbar;ADSR à la place  (depuis <menuchoice
> <guimenu
>Modules</guimenu
> <guisubmenu
>Synthèse</guisubmenu
> <guisubmenu
>Enveloppes</guisubmenu
> </menuchoice
>). Connectez&nbsp;: </para>

<orderedlist
> <listitem
> <para
>L'entrée <quote
>pressed</quote
> de la structure au port <quote
>active</quote
> de l'ADSR</para
> </listitem
> <listitem
> <para
>La sortie du SIN à l'entrée <quote
>invalue</quote
> de l'ADSR</para
> </listitem
> <listitem
> <para
>Le port <quote
>outvalue</quote
> à la sortie <quote
>left</quote
> de la structure</para
> </listitem
><listitem
> <para
>Le port <quote
>outvalue</quote
> de l'ADSR à la sortie <quote
>right</quote
> de la structure</para
> </listitem
> </orderedlist>

<para
> Réglez les paramètres attack à 0.1, decay à 0.2 et release à 0.1. </para>

<para
> Une autre chose à laquelle nous devons penser est que la structure de l'instrument, d'une manière ou d'une autre, doit maintenant savoir quand elle est prête à jouer, et alors elle doit se fermer, car sinon, ça ne s'arrêtera jamais, même si la note a été relâchée. Heureusement, l'enveloppe ADSR sait lorsqu'il n'y aura plus rien à entendre puisque de toutes façons, elle fixe le signal à zéro un certain temps après que la touche a été enfoncée. </para>

<para
> Ceci est indiqué en passant la sortie <quote
>done</quote
> à 1. Connectez-le à la sortie <quote
>done</quote
> de la structure. Cela va fermer la structure dès que la sortie <quote
>done</quote
> passe à 1. </para>

<para
> Renommez votre structure en instrument_tutorial (depuis <menuchoice
><guimenu
> Fichier</guimenu
> <guimenuitem
>Renommer la structure</guimenuitem
></menuchoice
>. Ensuite, enregistrez-la en utilisant enregistrer sous (le nom par défaut devrait être instrument_tutorial maintenant).</para
><para
>Démarrez artscontrol, et allez dans <menuchoice
><guimenu
>Affichage</guimenu
><guimenuitem
>Voir le Gestionnaire Midi </guimenuitem
></menuchoice
>, et choisissez <menuchoice
><guimenu
>Ajouter</guimenu
><guimenuitem
>Sortie Midi du synthétiseur aRts</guimenuitem
></menuchoice
>. Enfin, vous devriez pouvoir sélectionner votre instrument (tutoriel) ici. </para>

<para
> Ouvrez un terminal et saisissez <userinput
><command
>midisend</command
></userinput
>. Vous verrez que <command
>midisend</command
> et l'instrument sont maintenant listés dans le gestionnaire &MIDI; de &arts;. Après avoir sélectionné les deux et avoir cliqué sur <guibutton
>Connecter</guibutton
>, nous avons enfin terminé. Prenez votre clavier et commencez à jouer (bien sûr, il doit être connecté à votre ordinateur). </para>
</sect2>

<sect2 id="suggestions">
<title
>Suggestions</title>

<para
> Vous êtes maintenant capable de vous servir de &arts;. Voici quelques astuces que vous pouvez tester pour améliorer vos structures&nbsp;: </para>

<itemizedlist
> <listitem
> <para
> Essayez d'utiliser d'autres choses que des ondes sinusoïdales. Si vous connectez une onde triangulaire, vous penserez probablement que le son n'est pas terrible. Mais essayez d'associer un filtre SHELVE&lowbar;CUTOFF avec une onde triangulaire pour couper les fréquences supérieures à une certaine limite (essayez quelque chose comme 1000 Hz, ou encore mieux deux fois la fréquence d'entrée, ou la fréquence d'entrée + 200 Hz ou quelque chose comme ça). </para
> </listitem
> <listitem
> <para
> Essayez d'utiliser plusieurs oscillateurs. Le module Synth&lowbar;XFADE peut être utilisé pour mixer les deux signaux, et Synth&lowbar;ADD pour les additionner. </para
> </listitem
> <listitem
> <para
> Essayez de ne pas donner exactement les mêmes fréquences à tous les oscillateurs, ça donne des oscillations sympathiques (NdT effet de chorus). </para
> </listitem
> <listitem
> <para
> Essayez d'utiliser plusieurs enveloppes. </para
> </listitem
> <listitem
> <para
> Essayez de synthétiser des instruments avec des sorties différentes à gauche et à droite. </para
> </listitem
> <listitem
> <para
> Essayez un post-traitement du signal en sortie du downlink. Vous pouvez par exemple mixer une version retardée du signal avec l'original pour obtenir un effet d'écho. </para
> </listitem
> <listitem
> <para
> Essayez d'utiliser le réglage de la vélocité (c'est la force avec laquelle la touche a été frappée, vous pouvez aussi dire volume). L'effet est toujours intéressant lorsque la vélocité n'influe pas uniquement sur le volume du signal résultant, mais aussi sur le son de l'instrument (par exemple la fréquence de coupure). </para
> </listitem
> <listitem
> <para
>...</para
> </listitem
> </itemizedlist>

<para
> Si vous avez créé quelque chose de bien, envoyez-le pour notre site web, ou pour l'inclure dans la prochaine version de &arts;. </para>
</sect2>

</sect1>

<sect1 id="artsbuilder-examples">
<title
>Exemples</title>

<para
> &artsbuilder; est livré avec plusieurs exemples, qui peuvent être ouverts depuis <menuchoice
><guimenu
>Fichier</guimenu
><guimenuitem
>Ouvrir un exemple...</guimenuitem
></menuchoice
>. Certains sont dans le dossier alors ouvert, d'autres (qui pour diverses raisons ne fonctionnent pas avec la version actuelle) sont placés dans le dossier todo. </para>
<para
> Les exemples sont regroupés en plusieurs catégories&nbsp;: </para>

<itemizedlist
> <listitem
> <para
> Des exemples autonomes illustrant comment utiliser les modules internes à arts (nommés <filename
>examples_*.arts</filename
>). Ces exemples envoient tous un signal vers la carte son. </para
> </listitem
> <listitem
> <para
> Des instruments construits à partir des modules de bas niveau de arts (nommés <filename
>instruments_*.arts</filename
>). Ils respectent une convention pour les ports d'entrée et de sortie de façon à pouvoir les utiliser par le gestionnaire &MIDI; de &artscontrol;. </para
> </listitem
> <listitem
> <para
> Des modèles pour créer de nouveaux modules (nommés <filename
>template_*.arts</filename
>). </para
> </listitem
> <listitem
> <para
> Des effets, qui peuvent être réutilisés commues nouveaux blocs (nommés <filename
>effect_*.arts</filename
>) [ tous dans todo ] </para
> </listitem
> <listitem
> <para
> Des éléments de mixage utilisés pour créer des tables de mixage, incluant des contrôleurs graphiques (nommés <filename
>mixer_element_*.arts</filename
>). [ tous dans todo ] </para
> </listitem
> <listitem
> <para
> Des modules divers qui n'entrent pas dans l'une des catégories précédentes. </para
> </listitem
> </itemizedlist>

<variablelist
> <title
>Description détaillée de chaque module&nbsp;:</title
> <varlistentry
> <term
><filename
>example_stereo_beep.arts</filename
></term
> <listitem
> <para
> Génère une onde sinusoïdale à 440&nbsp;Hz sur le canal gauche et une onde sinusoïdale à 880&nbsp;Hz sur le canal droit, et les envoie vers la sortie de la carte son. Ceci est référencé dans la documentation de &arts;. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_sine.arts</filename
></term
> <listitem
> <para
> Génère une onde sinusoïdale à 440&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_pulse.arts</filename
></term
> <listitem
> <para
> Génère une onde de type impulsion à 440&nbsp;Hz avec un rapport cyclique de 20%. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_softsaw.arts</filename
></term
> <listitem
> <para
> Génère une onde en dent de scie à 440&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_square.arts</filename
></term
> <listitem
> <para
> Génère une onde carrée à 440&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_tri.arts</filename
></term
> <listitem
> <para
> Génère une onde triangulaire à 440&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_noise.arts</filename
></term
> <listitem
> <para
> Génère un bruit blanc. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_dtmf1.arts</filename
></term
> <listitem
> <para
> Génère une double tonalité en produisant deux ondes sinusoïdales à 697 et 1209&nbsp;Hz, en les multipliant chacune par 0.5, et en les ajoutant. Il s'agit de la tonalité DMTF du nombre <quote
>1</quote
> sur un clavier de téléphone. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_atan_saturate.arts</filename
></term
> <listitem
> <para
> Génère une onde triangulaire modifiée par un filtre de type <quote
>atan saturate</quote
>. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_autopanner.arts</filename
></term
> <listitem
> <para
> Utilise une panoramique automatique pour balancer une onde sinusoïdale à 440&nbsp;Hz entre les haut-parleurs droit et gauche à une fréquence de 2&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_brickwall.arts</filename
></term
> <listitem
> <para
> Atténue une onde sinusoïdale d'un facteur 5 et la dirige à travers un limiteur de type <quote
>brickwall</quote
>. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_bus.arts</filename
></term
> <listitem
> <para
> <quote
>Downlink</quote
> depuis un bus nommé <quote
>Bus</quote
> et <quote
>uplink</quote
> vers le bus <quote
>out_soundcard</quote
> avec inversion des canaux droit et gauche. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_cdelay.arts</filename
></term
> <listitem
> <para
> <quote
>Downlink</quote
> depuis un bus nommé <quote
>Delay</quote
>, <quote
>uplinks</quote
> le canal droit à travers un cdelay réglé sur 0.5 seconde, laissant inchangé le canal gauche. Vous pouvez utiliser &artscontrol; pour connecter l'effet à un lecteur audio et observer les résultats. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_delay.arts</filename
></term
> <listitem
> <para
> Il s'agit du même exemple que <filename
>example_cdelay</filename
> mais utilise l'effet delay. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_capture_wav.arts</filename
></term
> <listitem
> <para
> Ceci utilise un module Synth_CAPTURE_WAV pour enregistrer une onde sinusoïdale à 440&nbsp;Hz dans un fichier wav. Exécutez le module pendant quelques secondes, puis examinez le fichier créé dans <filename class="directory"
>/tmp</filename
>. Vous pouvez le lire avec un lecteur comme <application
>kaiman</application
>. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_data.arts</filename
></term
> <listitem
> <para
> Ceci utilise un module Data pour générer un flux constant de la valeur <quote
>3</quote
> et l'envoie vers un module Debug pour l'afficher périodiquement. Il contient aussi un module Nil, illustrant comment il peut être utilisé pour ne rien faire. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_adsr.arts</filename
></term
> <listitem
> <para
> Montre comment créer un simple son d'instrument utilisant un module d'enveloppe Adsr, déclenché de manière répétitive par une onde carrée. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_fm.arts</filename
></term
> <listitem
> <para
> Ceci utilise un module de Source FM pour générer une onde sinusoïdale dont la fréquence est modulée à 5&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_freeverb.arts</filename
></term
> <listitem
> <para
> L'effet Freeverb est connecté d'un bus downlink vers un bus outlink. Vous pouvez utiliser artscontrol pour connecter l'effet à un lecteur audio et observer le résultat. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_flanger.arts</filename
></term
> <listitem
> <para
> Ceci implante un simple effet de flanger (apparemment, il ne fonctionne pas encore). </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_moog.arts</filename
></term
> <listitem
> <para
> Cette structure combine les deux canaux depuis un bus en un seul canal, qui passe ensuite dans un filtre Moog VCF, et est dirigé vers le bus out_soundcard. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_pitch_shift.arts</filename
></term
> <listitem
> <para
> Cette structure envoie le canal gauche des données d'une carte son vers un effet de Pitch shift (décalage de la hauteur du son). Ajustez le paramètre de vitesse pour modifier l'effet. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_rc.arts</filename
></term
> <listitem
> <para
> Cette structure dirige le bruit blanc généré vers un filtre RC puis vers la sortie de la carte son. En affichant la FFT (transformée de Fourier) dans artscontrol, vous pouvez comparer avec le spectre d'une source de bruit non filtrée. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_sequence.arts</filename
></term
> <listitem
> <para
> Ceci met en évidence le module Sequence en jouant une séquence de notes. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_shelve_cutoff.arts</filename
></term
> <listitem
> <para
> Cette structure envoie un bruit blanc vers un filtre de type Shelve Cutoff puis vers la sortie de la carte son. En affichant la FFT (transformée de Fourier) dans artscontrol, vous pouvez comparer avec le spectre d'une source de bruit non filtrée. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_equalizer.arts</filename
></term
> <listitem
> <para
> Ceci met en évidence le module Std_Equalizer. Il amplifie les basses et hautes fréquences de 6&nbsp;dB. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_tremolo.arts</filename
></term
> <listitem
> <para
> Ceci met en évidence l'effet de trémolo. Les canaux gauche et droite sont modulés en utilisant un trémolo à 10&nbsp;Hz. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_xfade.arts</filename
></term
> <listitem
> <para
> Dans cet exemple, deux ondes sinusoïdales à 440 et 880&nbsp;Hz sont mélangées en utilisant un <quote
>cross fader</quote
>. Ajustez la valeur du pourcentage d'entrée du <quote
>crossfader</quote
> entre *1 et 1 pour contrôler le mélange des deux signaux. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_pscale.arts</filename
></term
> <listitem
> <para
> Ceci illustre le module Pscale (je ne sais pas si c'est un exemple significatif). </para
> </listitem
> </varlistentry
> <varlistentry
> <term
><filename
>example_play_wav.arts</filename
></term
> <listitem
> <para
> Ceci illustre le module Play Wave. Vous devez entrer le chemin complet vers un fichier <literal role="extension"
>.wav</literal
> comme paramètre de nom de fichier. </para
> </listitem
> </varlistentry
> <varlistentry
> <term
>example_multi_add.arts</term
> <listitem
> <para
> Ceci montre le module Multi Add qui accepte un nombre indéterminé d'entrées. Il additionne trois modules Data qui produisent les valeurs 1, 2 et 3 puis affiche le résultat 6. </para
> </listitem
> </varlistentry
> </variablelist>

</sect1>
</chapter>

